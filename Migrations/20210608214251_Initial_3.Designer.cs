// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoApi.Models;

namespace TodoApi.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210608214251_Initial_3")]
    partial class Initial_3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TodoApi.Models.LoadSheddingSlot", b =>
                {
                    b.Property<int>("LoadSheddingSlotID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DayOfMonthID")
                        .HasColumnType("int");

                    b.Property<int>("StageID")
                        .HasColumnType("int");

                    b.Property<int>("SuburbClusterID")
                        .HasColumnType("int");

                    b.Property<int>("TimeCodeID")
                        .HasColumnType("int");

                    b.HasKey("LoadSheddingSlotID");

                    b.HasIndex("SuburbClusterID");

                    b.HasIndex("TimeCodeID");

                    b.ToTable("LoadSheddingSlot");
                });

            modelBuilder.Entity("TodoApi.Models.Municipality", b =>
                {
                    b.Property<int>("MunicipalityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProvinceID")
                        .HasColumnType("int");

                    b.HasKey("MunicipalityID");

                    b.HasIndex("ProvinceID");

                    b.ToTable("Municipality");
                });

            modelBuilder.Entity("TodoApi.Models.Province", b =>
                {
                    b.Property<int>("ProvinceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProvinceID");

                    b.ToTable("Province");
                });

            modelBuilder.Entity("TodoApi.Models.Suburb", b =>
                {
                    b.Property<int>("SuburbID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MunicipalityID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SuburbClusterID")
                        .HasColumnType("int");

                    b.HasKey("SuburbID");

                    b.HasIndex("MunicipalityID");

                    b.HasIndex("SuburbClusterID");

                    b.ToTable("Suburb");
                });

            modelBuilder.Entity("TodoApi.Models.SuburbCluster", b =>
                {
                    b.Property<int>("SuburbClusterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("SuburbClusterID");

                    b.ToTable("SuburbCluster");
                });

            modelBuilder.Entity("TodoApi.Models.TimeCode", b =>
                {
                    b.Property<int>("TimeCodeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("TimeCodeID");

                    b.ToTable("TimeCode");
                });

            modelBuilder.Entity("TodoApi.Models.LoadSheddingSlot", b =>
                {
                    b.HasOne("TodoApi.Models.SuburbCluster", "SuburbCluster")
                        .WithMany("LoadSheddingSlot")
                        .HasForeignKey("SuburbClusterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TodoApi.Models.TimeCode", "TimeCode")
                        .WithMany()
                        .HasForeignKey("TimeCodeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SuburbCluster");

                    b.Navigation("TimeCode");
                });

            modelBuilder.Entity("TodoApi.Models.Municipality", b =>
                {
                    b.HasOne("TodoApi.Models.Province", "Province")
                        .WithMany("Municipality")
                        .HasForeignKey("ProvinceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("TodoApi.Models.Suburb", b =>
                {
                    b.HasOne("TodoApi.Models.Municipality", "Municipality")
                        .WithMany("Suburb")
                        .HasForeignKey("MunicipalityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TodoApi.Models.SuburbCluster", "SuburbCluster")
                        .WithMany("Suburb")
                        .HasForeignKey("SuburbClusterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Municipality");

                    b.Navigation("SuburbCluster");
                });

            modelBuilder.Entity("TodoApi.Models.Municipality", b =>
                {
                    b.Navigation("Suburb");
                });

            modelBuilder.Entity("TodoApi.Models.Province", b =>
                {
                    b.Navigation("Municipality");
                });

            modelBuilder.Entity("TodoApi.Models.SuburbCluster", b =>
                {
                    b.Navigation("LoadSheddingSlot");

                    b.Navigation("Suburb");
                });
#pragma warning restore 612, 618
        }
    }
}
